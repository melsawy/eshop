<?php

define('RINGO_BASE_CACHE_RINGO_ENDPOINTS', REQUEST_TIME + 3600);

require_once dirname(__FILE__) . '/includes/assign_bundle.inc';
require_once dirname(__FILE__) . '/includes/ringo_api_calls.inc';
require_once dirname(__FILE__) . '/soap/DealerWs/DealerWs.php';
require_once dirname(__FILE__) . '/soap/ManagementWs/ManagementWs.php';
require_once dirname(__FILE__) . '/uc_eshop_checkout_pane.inc';


/**
 * Implements hook_menu().
 */
function ringo_eshop_menu() {
  $items = array();
  $items['my-ringo/manage-bundles'] = array(
    'title' => 'My Offers',
    'page callback' => '_ringo_eshop_build_international_offers',
    //'page callback' => 'drupal_get_form',
    //'page arguments' => array('assign_eshop_international_bundle_form'),
    'access callback' => 'user_is_logged_in',
    'file' => 'assign_bundle.inc',
    'file path' => drupal_get_path('module', 'ringo_eshop') . '/includes',
  );
  $items['manage/sim-cards'] = array(
    'title' => 'Manage Sim-cards',
    'page callback' => '_ringo_eshop_manage_simcards',
    'access arguments' => array('Administer product options'),
    'file' => 'manage_simcards.inc',
    'file path' => drupal_get_path('module', 'ringo_eshop') . '/includes',
  );
  $items['admin/config/system/eshop'] = array(
    'title' => 'eshop',
    'description' => 'Manage general eshop configuration.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('_ringo_eshop_settings'),
    'access arguments' => array('administer site configuration'),
    'file' => 'ringo_eshop.admin.inc',
    'file path' => drupal_get_path('module', 'ringo_eshop') . '/includes',
  );
  $items['eshop/select-number'] = array(
    'page callback' => '_eshop_select_number',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  $items['eshop/login'] = array(
    'title' => 'Login',
    'page callback' => '_eshop_goto_ringo',
    'page arguments' => array('login'),
    'access callback' => TRUE,
  );
  $items['eshop/password'] = array(
    'title' => 'Login',
    'page callback' => '_eshop_goto_ringo',
    'page arguments' => array('password'),
    'access callback' => TRUE,
  );
  $items['eshop-ringo'] = array(
    'title' => 'Login',
    'page callback' => '_eshop_goto_ringo',
    'page arguments' => array('ringo'),
    'access callback' => TRUE,
  );
  $items['admin/store/settings/checkout/contract'] = array(
    'title' => 'Ringo Contract',
    'description' => 'Manage ringo contract.',
    'page arguments' => array('ringo_eshop_ringo_contract_form'),
    'page callback' => 'drupal_get_form',
    'access arguments' => array('administer store'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 2,
    'file' => 'includes/ringo_eshop.admin.inc',
  );
  return $items;
}

function _eshop_select_number() {
  $options = array();
  $search_value = $_GET['search_value'];
  $result = db_query_range('
            SELECT ao.oid, name
            FROM {uc_attribute_options} ao
            INNER JOIN {uc_product_options} po ON ao.oid = po.oid
            WHERE ao.aid = :aid AND nid = :nid AND ao.oid NOT IN 
            (
                SELECT oid FROM {ringo_eshop_numbers}
            ) 
            AND name LIKE :number
            ', array(
      ':aid' => 2,
      ':nid' => variable_get('ringo_eshop_sim_id', 30),
      ':number' => '%' . db_like($search_value) . '%',
    ),
    0, variable_get('eshop_limit_numers', 20))->fetchAllKeyed(0, 1);

  foreach ($result as $k => $v) {
    $options[] = array('key' => $k, 'value' => $v);
  }
  drupal_json_output($options);
}

function _eshop_goto_ringo($preset) {
  global $language, $base_url;
  $path = variable_get('eshop_ringo_url', 'http://ringo.local/') . $language->language;
  $query = array();
  switch ($preset) {
    case 'login':
      $path .= '/user/login';
      $query['eshop_url'] = $base_url . '/' . $language->language;
      break;

    case 'password':
      $path .= '/user/password';
      break;

    case 'ringo':
      break;
  }
  drupal_goto($path, array('query' => $query));
}

/*
 * Implement of hook_theme().
 */
function ringo_eshop_theme() {
  return array(
    'manage_simcards_template' => array(
      // File name will be custom-page.tpl.php.
      'variables' => array('options' => NULL, 'num_status' => NULL),
      'template' => "manage-simcards",
      'path' => drupal_get_path("module", "ringo_eshop") . "/templates",
    ),
  );
}

/**
 * Implements hook_uc_checkout_pane().
 */
function ringo_eshop_uc_checkout_pane() {
  $panes[] = array(
    'id' => 'horizontal_browsing_tabs',
    'title' => NULL,
    'desc' => NULL,
    'callback' => 'ringo_eshop_horizontal_browsing_tabs_pane_checkout',
    'process' => FALSE,
    'weight' => -10,
  );

  $panes[] = array(
    'id' => 'id_document',
    'title' => t('ID Document'),
    'desc' => t('Provide customers to add ID document information'),
    'callback' => 'ringo_eshop_id_document_pane_checkout',
    'process' => TRUE,
    'weight' => 3,
  );
  $panes[] = array(
    'id' => 'ringo_contact_info',
    'title' => t('Contact info'),
    'desc' => t('Provide customers to add contact information'),
    'callback' => 'ringo_eshop_contact_info_pane_checkout',
    'process' => TRUE,
    'weight' => 2,
  );

  return $panes;
}

/**
 * Implements hook_uc_add_to_cart().
 */
function ringo_eshop_uc_add_to_cart($nid, $qty, $data) {
  $sim_id = variable_get('ringo_eshop_sim_id', 30);
  if ($nid == $sim_id) {
    global $user;
    $user_profile = user_load($user->uid);
    $restrict_qty = variable_get('ringo_eshop_sim_restrict_qty', 4);

    // Load current mobiles.
    if (FALSE && isset($user_profile->field_tax_code[LANGUAGE_NONE][0]['value'])) {
      $all_mobiles = ringo_api_get_all_mobile_numbers($user_profile->field_tax_code[LANGUAGE_NONE][0]['value']);
      if (count($all_mobiles)) {
        $restrict_qty -= count($all_mobiles);
      }
    }

    // Get SIM count in shipping cart.
    $sim_count = 0;
    foreach (uc_cart_get_contents() as $item) {
      if ($item->nid == $sim_id) {
        $sim_count++;
      }
    }
    if ($sim_count >= $restrict_qty) {
      $message = format_plural($restrict_qty, 'Sorry, you may only have 1 item in your cart. You must checkout or remove the item in your cart before adding a different item.',
        'Sorry, you may only have a total of @count items in your cart.  You must checkout or remove items from your cart before adding others.');
      $result[] = array(
        'success' => FALSE,
        'message' => $message,
      );
      return $result;
    }

    // Log number in custom table to track this number.
    $oid = $data['attributes'][2];
    db_insert('ringo_eshop_numbers')
      ->fields(array(
        'oid' => $oid,
        'uid' => $user->uid,
        'status' => 1,
      ))
      ->execute();
  }
}

/**
 * Implements hook_uc_cart_item_update().
 */
function ringo_eshop_uc_cart_item_update($item) {
  $sim_id = variable_get('ringo_eshop_sim_id', 30);
  if ($item->nid == $sim_id && $item->qty > 1) {
    db_update('uc_cart_products')
      ->fields(array('qty' => 1, 'changed' => time()))
      ->condition('cart_id', uc_cart_get_id())
      ->condition('nid', $item->nid)
      ->condition('data', serialize($item->data))
      ->execute();
    drupal_set_message(t('You may only add 1 !item to your cart. Quantity has been restricted.', array('!item' => $item->title)), 'warning');
  }
}

/**
 * Implements hook_uc_order().
 */
function ringo_eshop_uc_order($op, &$order, $arg2) {
  switch ($op) {
    case 'save':
      // ID Document section.
      $document_id = variable_get('eshop_document_id', 80);
      $data = get_object_vars(_uc_webform_pane_get_data($document_id, $order->order_id));
      if ($data) {
        $fields = array(
          'field_type' => array('value' => $data['data'][1]['value'][0]),
          'field_id_number' => array('value' => $data['data'][2]['value'][0]),
          'field_expiry_date' => array('value' => strtotime($data['data'][3]['value'][0])),
        );
        _eshop_update_user_with_order_data($fields, $order->uid);
      }

      // Contact info section.
      $document_id = variable_get('eshop_contact_info_id', 81);
      $data = get_object_vars(_uc_webform_pane_get_data($document_id, $order->order_id));
      if ($data) {
        $fields = array(
          'field_customer_title' => array('value' => $data['data'][1]['value'][0]),
          'field_first_name' => array('value' => $data['data'][2]['value'][0]),
          'field_last_name' => array('value' => $data['data'][3]['value'][0]),
          'field_tax_code' => array('value' => $data['data'][4]['value'][0]),
          'field_gender' => array('value' => $data['data'][6]['value'][0]),
          'field_province_of_birth' => array('value' => $data['data'][8]['value'][0]),
          'field_city_of_birth' => array('value' => $data['data'][9]['value'][0]),
          'field_country_of_birth' => array(
            'key' => 'iso2',
            'value' => $data['data'][7]['value'][0],
          ),
          'field_date_of_birth' => array('value' => strtotime($data['data'][5]['value'][0])),
        );
        _eshop_update_user_with_order_data($fields, $order->uid);
      }
      break;

    /*
    case 'update':
        // Lock sim number.
        if ($arg2 == 'pending') {
            global $user;
            $sim_id = variable_get('ringo_eshop_sim_id', 30);
            foreach($order->products as $product) {
                if ($product->nid == $sim_id) {
                    // log number in custom table to track this number
                    $number = $product->data['attributes']['Number'];
                    reset($number);
                    echo 'I am here';exit;
                    db_insert('ringo_eshop_numbers')
                        ->fields(array(
                            'oid' => key($number),
                            'uid' => $user->uid,
                            'status' => 1,
                        ))
                        ->execute();
                }
            }
        }
        break;
    */
  }
}

function _eshop_update_user_with_order_data($fields, $uid) {
  $account = user_load($uid);
  foreach ($fields as $k => $v) {
    if (empty($v['value'])) {
      return;
    }
    $target_key = isset($v['key']) ? $v['key'] : 'value';
    $account->{$k}[LANGUAGE_NONE][0][$target_key] = $v['value'];
  }
  user_save($account);
}

/**
 * Implements hook_form_alter().
 */
function ringo_eshop_form_alter(&$form, &$form_state, $form_id) {
  drupal_add_js(drupal_get_path('module', 'ringo_eshop') . '/js/jquery-ui.js', array('group' => JS_THEME));
  drupal_add_css(drupal_get_path('module', 'ringo_eshop') . '/css/jquery-ui.css');
  drupal_add_js(drupal_get_path('module', 'ringo_eshop') . '/js/national_bundles.js', array('group' => JS_THEME));
  if ($form_id == 'uc_cart_checkout_form') {

    //$form['#attached']['js'][] = drupal_add_js(drupal_get_path('module', 'ringo_eshop'). '/js/eshop_checkout.js');
    $form['panes']['cart']['#prefix'] = _eshop_horizontal_browsing_tabs('');
    $form['panes']['delivery']['#prefix'] = _eshop_horizontal_browsing_tabs('delivery-pane');
    $form['panes']['webform_nid81']['#prefix'] = _eshop_horizontal_browsing_tabs('webform_nid81-pane');
    $form['panes']['webform_nid80']['#prefix'] = _eshop_horizontal_browsing_tabs('webform_nid80-pane');
    //$form['panes']['payment']['#prefix'] = _eshop_horizontal_browsing_tabs('payment-pane');
    $form['panes']['delivery']['#title'] = t('Shipping Address');
    $form['#validate'][] = '_ringo_eshop_validate_delivery';
    $form['panes']['payment']['term_condition'] = array(
      '#prefix' => '<div class="form-inline conditions-and-submit">',
      '#type' => 'checkbox',
      '#title' => t(
        'Accept !terms_and_conditions and !privacy_policy',
        array(
          '!privacy_policy' => l(
            t('Privacy Policy'),
            variable_get('ringo_privacy_link', '<front>'),
            array('attributes' => array('target' => '_blank'))
          ),
          '!terms_and_conditions' => l(
            t('Terms and Conditions'),
            variable_get('ringo_terms_and_conditions', '<front>'),
            array('attributes' => array('target' => '_blank'))
          ),
        )
      ),
      '#required' => TRUE,
    );

  }
  $sim_id = variable_get('ringo_eshop_sim_id', 30);
  if ($form_id == 'uc_product_add_to_cart_form_' . $sim_id) {
    $form['attributes'][5]['#type'] = 'textarea';
    $query = db_select('ringo_eshop_numbers', 'rn');
    $query->addField('rn', 'oid');
    $locked_options = $query->execute()->fetchAllKeyed(0, 0);
    $form['attributes'][2]['#options'] = array_diff_key($form['attributes'][2]['#options'], $locked_options);
    $eshop_number_chosen_ajax = 0;
    $eshop_limit_numers = variable_get('eshop_limit_numers', 20);
    if (count($form['attributes'][2]['#options']) > $eshop_limit_numers) {
      $eshop_number_chosen_ajax = 1;
      $form['attributes'][2]['#options'] = array_slice($form['attributes'][2]['#options'], 0, $eshop_limit_numers + 1, TRUE);
    }
    $setting = array('ringo_eshop' => array('eshop_number_chosen_ajax' => $eshop_number_chosen_ajax));
    drupal_add_js($setting, 'setting');

    // Localize card options.
    $card_types = array();
    foreach ($form['attributes'][1]['#options'] as $k => $v) {
      $card_types[$k] = t($v);
    }
    $form['attributes'][1]['#options'] = $card_types;
    $card_keys = array_keys($card_types);
    $form['attributes'][1]['#default_value'] = $card_keys[0];
    // Add national offers.
    $summary_text = t('National Offers: You designed an offer of !blue_start !voice minutes, !sms SMS &amp; !data GB !blue_end for
  an estimated monthly bill of "!price € / month"',
      array(
        '!blue_start' => '<span class="blue-color">',
        '!voice' => '<span class="voice">0</span>',
        '!sms' => '<span class="sms">0</span>',
        '!data' => '<span class="data">0</span>',
        '!price' => '<span class="purple-color"><span class="total">0</span>',
        '!blue_end' => '</span>',
      ));
    //$form['attributes'][4]['#prefix'] = '<div id="national-bundle-details">';
    //$form['attributes'][4]['#suffix'] = format_string('<p class="nat-bundle-desc">!summary</p>', array('!summary' => $summary_text)) .'</div>';
    //$form['attributes'][5]['#prefix'] = '<div id="international-bundle-details">';
    //$form['attributes'][5]['#suffix'] = format_string('<p class="internat-bundle-desc"></p>') .'</div>';
    $form['tabs'] = array(
      '#prefix' => '<div id="tabs">',
      '#markup' => '<ul><li><a href="#tabs-1">' . t('National Offers') . '</a></li><li><a href="#tabs-2">' . t('International Offers') . '</a></li></ul>',
      '#weight' => 0,
    );
    $form += _ringo_eshop_build_national_offers();
    $form += _ringo_eshop_build_international_offers();
    $nat_desc = '<div id="national-bundle-details">' . format_string('<p class="nat-bundle-desc">!summary</p>', array('!summary' => $summary_text)) . '</div>';
    $internat_desc = '<div id="international-bundle-details">' . format_string('<p class="internat-bundle-desc">!summary</p>', array('!summary' => t('International offers: '))) . '</div>';
    $form['tabs_close'] = array(
      '#markup' => '</div>',
      '#suffix' => $nat_desc . $internat_desc,
      '#weight' => 3,
    );
    $form['qty']['#weight'] = 4;
    // Submit form via JS to do validation through client side.
    $form['actions']['submit']['#attributes']['onclick'] = 'javascript: _sim_item_add_to_cart();return false;';
  }
  if ($form_id == 'user_register_form') {
    $form['#validate'][] = '_ringo_eshop_validate_address_phone';
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function ringo_eshop_form_webform_client_form_80_alter(&$form, &$form_state, $form_id) {
  $fields = array(
    'field_type' => 'type',
    'field_id_number' => 'number',
    'field_expiry_date' => array('name' => 'expiry_date', 'type' => 'date'),
  );
  _eshop_checkout_set_default_values($form, $fields);
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function ringo_eshop_form_webform_client_form_81_alter(&$form, &$form_state, $form_id) {
  $fields = array(
    'field_customer_title' => 'title',
    'field_first_name' => 'first_name',
    'field_last_name' => 'last_name',
    'field_tax_code' => 'tax_code',
    'field_gender' => 'gender',
    'field_province_of_birth' => 'province_of_birth',
    'field_city_of_birth' => 'city_of_birth',
    'field_country_of_birth' => array(
      'name' => 'country_of_birth',
      'type' => 'country',
    ),
    'field_date_of_birth' => array('name' => 'date_of_birth', 'type' => 'date'),
  );

  _eshop_checkout_set_default_values($form, $fields);
}

/**
 *
 */
function _eshop_checkout_set_default_values(&$form, $fields) {
  global $user;
  $user_profile = user_load($user->uid);
  foreach ($fields as $key => $field) {
    if (!is_array($field)) {
      $field = array('name' => $field, 'type' => 'default');
    }
    if (empty($form['submitted'][$field['name']]['#default_value'])) {
      $target_key = 'value';
      if ($field['type'] == 'country') {
        $target_key = 'iso2';
      }
      if (isset($user_profile->{$key}[LANGUAGE_NONE][0][$target_key])) {
        if ($field['type'] == 'date') {
          $default_date = $user_profile->{$key}[LANGUAGE_NONE][0][$target_key];
          $default_value = array(
            'month' => intval(date('m', $default_date)),
            'day' => intval(date('d', $default_date)),
            'year' => intval(date('Y', $default_date)),
          );
        }
        else {
          $default_value = $user_profile->{$key}[LANGUAGE_NONE][0][$target_key];
        }
        $form['submitted'][$field['name']]['#default_value'] = $default_value;
      }
    }
  }
}

function _ringo_eshop_validate_delivery($form, &$form_state) {
  global $user;
  // Validate delivery mobile number.
  if (isset($form_state['values']['panes']['delivery']['address']['delivery_phone'])) {
    $phone = $form_state['values']['panes']['delivery']['address']['delivery_phone'];
    if (!is_numeric($phone)) {
      form_set_error('panes][delivery][address][delivery_phone', t('You should add a valid shipping telephone number.'));
    }
  }
  // Validate billing mobile number.
  $phone = $form_state['values']['panes']['billing']['address']['billing_phone'];
  if (isset($form_state['values']['panes']['billing']['copy_address']) && !$form_state['values']['panes']['billing']['copy_address'] && !is_numeric($phone)) {
    form_set_error('panes][billing][address][delivery_phone', t('You should add a valid billing telephone number.'));
  }
  // Validate id number.
  if (isset($form_state['values']['panes']['webform_nid80'][0]['number'])) {
    $result = db_query('
      SELECT COUNT(ws.sid) 
      FROM {webform_submissions} ws 
      INNER JOIN {webform_submitted_data} wsd ON ws.sid = wsd.sid AND cid = :cid 
      WHERE ws.nid = :nid AND uid != :uid AND data = :data
      ', array(
        ':nid' => 80,
        ':cid' => 2,
        ':uid' => $user->uid,
        ':data' => $form_state['values']['panes']['webform_nid80'][0]['number'],
      )
    )->fetchField();
    if ($result) {
      form_set_error('panes][webform_nid80][0][number', t('Same ID number exists for another user.'));
    }
  }

  // Validate tax code.
  if (isset($form_state['values']['panes']['webform_nid81'][0]['tax_code'])) {
    $result = db_query('
      SELECT COUNT(ws.sid) 
      FROM {webform_submissions} ws 
      INNER JOIN {webform_submitted_data} wsd ON ws.sid = wsd.sid AND cid = :cid 
      WHERE ws.nid = :nid AND uid != :uid AND data = :data
      ', array(
        ':nid' => 81,
        ':cid' => 4,
        ':uid' => $user->uid,
        ':data' => $form_state['values']['panes']['webform_nid81'][0]['tax_code'],
      )
    )->fetchField();
    if ($result) {
      form_set_error('panes][webform_nid81][0][tax_code', t('Same tax code exists for another user.'));
    }
  }

}

function _ringo_eshop_validate_address_phone($form, &$form_state) {
  // Validate delivery mobile number.
  if (!empty($form_state['uc_addresses_address']['phone']) && !is_numeric($form_state['uc_addresses_address']['phone'])) {
    form_set_error('address][phone', t('You should add a valid telephone number.'));
  }
}

/**
 * Implements hook_uc_cart_alter().
 */
function ringo_eshop_uc_cart_alter(&$items) {
  $sim_id = variable_get('ringo_eshop_sim_id', 30);
  foreach ($items as $id => $item) {
    if ($item->nid == $sim_id) {
      $pattern = '/"([0-9].*?)€/';
      if (!empty($item->data['attributes'][4])) {
        preg_match($pattern, $item->data['attributes'][4], $matches);
        if (isset($matches[1])) {
          $items[$id]->price += intval($matches[1]);
        }
      }
      if (!empty($item->data['attributes'][5])) {
        preg_match_all($pattern, $item->data['attributes'][5], $matches);
        foreach ($matches[1] as $price) {
          $items[$id]->price += intval($price);
        }
      }
    }
  }
}

function ringo_eshop_uc_cart_item_delete($entity) {
  $sim_id = variable_get('ringo_eshop_sim_id', 30);
  if ($entity->nid == $sim_id && $entity->qty == 0) {
    $oid = $entity->data['attributes'][2];
    db_delete('ringo_eshop_numbers')
      ->condition('oid', $oid)
      ->execute();
  }
}

function _ringo_eshop_build_national_offers() {
  $national_offers = get_national_offers();
  return assign_national_bundle_form($national_offers);
}

function _ringo_eshop_build_international_offers() {
  return drupal_get_form('assign_eshop_international_bundle_form');
}


function _ringo_eshop_assign_international_bundle_form($international_promotions) {
  $form = array();
  $user_regions = array();

  // Add bundle field set.
  $form['select-int-bundle'] = array(
    '#type' => 'fieldset',
    '#title' => t('International bundles'),
  );


  $regions = array();
  $table_region = NULL;
  $taken_bundles = array();
  foreach ($international_promotions as $region_promotions) {
    $region_id = $region_promotions['regionId'];

    // If all bundles are taken, skip this region.
    if (isset($user_regions[$region_id])) {
      if (count($user_regions[$region_id]) == count($region_promotions['bundles'])) {
        continue;
      }
    }

    $regions[$region_promotions['regionId']] = t($region_promotions['regionName']);

    // Show selected country if any.
    if (isset($form_state['values']['int-region']) && $form_state['values']['int-region'] == $region_promotions['regionId']) {
      $table_region = $region_promotions;
      $taken_bundles = isset($user_regions[$region_id]) ? $user_regions[$region_id] : array();
    }

    // Show first country by default.
    if (is_null($table_region)) {
      $table_region = $region_promotions;
      $taken_bundles = isset($user_regions[$region_id]) ? $user_regions[$region_id] : array();
    }
  }

  $form['select-int-bundle']['int-region'] = array(
    '#type' => 'select',
    '#options' => $regions,
    '#ajax' => array(
      'event' => 'change',
      'wrapper' => 'select-int-wrapper',
      'callback' => 'int_bundle_selection_change_callback',
      'method' => 'replace',
    ),
  );

  if (!is_null($table_region)) {
    $form['select-int-bundle']['int-bundle'] = get_international_table(
      $table_region,
      TRUE,
      $taken_bundles
    );

    $form['select-int-bundle']['int-bundle']['#prefix'] = '<div id="select-int-wrapper" >';
    $form['select-int-bundle']['int-bundle']['#suffix'] = '</div>';
  }
  else {
    $form['select-int-bundle']['int-bundle'] = array(
      '#markup' => '<div id="select-int-wrapper" ></div>',
    );
  }
  $form['select-int-bundle']['skip'] = array(
    '#markup' => '<div class="skip-bundle" onclick="toggle_bundle(\'national\');">' . t('Go to national bundle') . '</div>',
  );
  return $form;
}


/**
 * Implements hook_init().
 */
function ringo_eshop_init() {
  drupal_add_js(drupal_get_path('module', 'ringo_eshop') . '/js/eshop_checkout.js');
  // Redirect to SIM cart product page.
  if ($_GET['q'] == 'taxonomy/term/44') {
    $sim_id = variable_get('ringo_eshop_sim_id', 30);
    drupal_goto('node/' . $sim_id);
  }
}

function _eshop_horizontal_browsing_tabs($pane) {
  $rows = array();
  $headers = array();
  $attributes = array('class' => 'eshop-checkout-sroll-table');

  // drupal_add_js(drupal_get_path('module', 'ringo_eshop'). '/js/eshop_checkout.js') ;

  $row_text = t('Your Information');
  $scoll_to_id = "webform_nid81-pane";
  $selected = ($scoll_to_id == $pane) ? 'pane-selected' : '';
  $rows[0][0] = array(
    'data' => $row_text,
    'class' => 'checkout-scroll-tab ' . $selected,
    'data-target' => $scoll_to_id,
  );

  $row_text = t('ID Document');
  $scoll_to_id = "webform_nid80-pane";
  $selected = ($scoll_to_id == $pane) ? 'pane-selected' : '';
  $rows[0][1] = array(
    'data' => $row_text,
    'class' => 'checkout-scroll-tab ' . $selected,
    'data-target' => $scoll_to_id,
  );

  $row_text = t('Shipping Address');
  $scoll_to_id = "delivery-pane";
  $selected = ($scoll_to_id == $pane) ? 'pane-selected' : '';
  $rows[0][2] = array(
    'data' => $row_text,
    'class' => 'checkout-scroll-tab ' . $selected,
    'data-target' => $scoll_to_id,
  );

  $row_text = t('Payment');
  $scoll_to_id = "payment-pane";
  $selected = ($scoll_to_id == $pane) ? 'pane-selected' : '';
  $rows[0][3] = array(
    'data' => $row_text,
    'class' => 'checkout-scroll-tab ' . $selected,
    'data-target' => $scoll_to_id,
  );


  $table = array(
    'header' => $headers,
    'rows' => $rows,
    'attributes' => $attributes,
    'sticky' => FALSE,
  );

  return theme('table', $table);
}

/**
 * Implements hook_url_outbound_alter().
 */
function ___ringo_eshop_url_outbound_alter(&$path, &$options, $original_path) {
  if (user_is_anonymous()) {
    if ($path == 'user' || $path == 'user/login') {
      $path = 'eshop/login';
    }
    elseif ($path == 'user/password') {
      $path = 'eshop/password';
    }
  }
}

/**
 * Download contract link.
 *
 * Used in your information product pane.
 */
function _ringo_eshop_contract_link() {
  $fid = variable_get('ringo_eshop_contract', NULL);
  if (is_numeric($fid)) {
    $file = file_load($fid);
    if ($file) {
      print '<h1><br>' . t('Click !here to download contract', array('!here' => l(t('here'), file_create_url($file->uri)))) . '</h1>';
    }
  }
}
