<?php

define('RINGO_BASE_CACHE_RINGO_ENDPOINTS', REQUEST_TIME + 3600);

require_once DRUPAL_ROOT . '/sites/all/modules/custom/ringo_eshop/includes/assign_bundle.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/custom/ringo_eshop/includes/ringo_api_calls.inc';
require_once DRUPAL_ROOT . '/sites/all/modules/custom/ringo_eshop/soap/DealerWs/DealerWs.php';
require_once DRUPAL_ROOT . '/sites/all/modules/custom/ringo_eshop/soap/ManagementWs/ManagementWs.php';

/**
 * Implementation of hook_uc_checkout_pane()
 */

function ringo_eshop_uc_checkout_pane() {
  $panes[] = array(
    'id' => 'id_document',
    'title' => t('ID Document'),
     'desc' => t('Provide customers to add ID document information'),
     'callback' => 'ringo_eshop_id_document_pane_checkout',
     'process' => TRUE,
     'weight' => 3,
   );
  $panes[] = array(
    'id' => 'ringo_contact_info',
    'title' => t('Contact info'),
     'desc' => t('Provide customers to add contact information'),
     'callback' => 'ringo_eshop_contact_info_pane_checkout',
     'process' => TRUE,
     'weight' => 2,
   );

   return $panes;
}

/**
 * ID Document checkout pane function
 */
function ringo_eshop_id_document_pane_checkout($op, &$order, $form = NULL, &$form_state = NULL) {

  switch($op) {
    //CHECKOUT FORM
    case 'view':
      $contents['id_type'] = array(
        '#title' => 'Type',
        '#type' => 'select',
        '#options' => array(
          'ID' => t('ID'),
          'Passport' => t('Passport'),
        ),
        '#required' =>  TRUE,
        //'#default_value' => $arg1->shipping_insurance['accept'] ? $arg1->shipping_insurance['accept'] : NULL,
      );
      $contents['id_number'] = array(
        '#type' => 'textfield',
        '#title' => t('Number'),
        '#required' => TRUE,
      );
      $contents['id_expiry_date'] = array(
        '#title' => t('Expiry date'),
        '#type' => 'date_popup',
        '#date_format' => 'm/d/Y',
        '#date_label_position' => 'within',
        '#date_increment' => 15,
        '#date_year_range' => '0:+8',
      );
      $contents['id_card'] = array(
        '#type' => 'file',
        '#title' => t('Image'),
        '#description' => t('Upload ID card & Tax code'),
      );
      return array('description' => '', 'contents' => $contents);

    //CHECKOUT PROCESSING - load values into order object.
    case 'process':
      if (empty($form_state['values']['panes']['id_document']['id_type'])) {
        form_set_error('panes][id_document][id_type', t('You cannot check out without selecting an ID type.'));
        return FALSE;
      }
      if (empty($form_state['values']['panes']['id_document']['id_number'])) {
        form_set_error('panes][id_document][id_number', t('You cannot check out without adding ID number.'));
        return FALSE;
      }
      $order->data['id_type'] = $form_state['values']['panes']['id_document']['id_type'];
      $order->data['id_number'] = $form_state['values']['panes']['id_document']['id_number'];
      $order->data['id_expiry_date'] = $form_state['values']['panes']['id_document']['id_expiry_date'];

      return TRUE;

    //CHECKOUT REVIEW
    case 'review':
      $message[] = array(
        'title' => t('ID Type'),
        'data' => $order->data['id_type'],
      );
      $message[] = array(
        'title' => t('ID Number'),
        'data' => $order->data['id_number'],
      );
      $message[] = array(
        'title' => t('Expiry date'),
        'data' => $order->data['id_expiry_date'],
      );
      return $message;
  }
}

/**
 * ID Document checkout pane function
 */
function ringo_eshop_contact_info_pane_checkout($op, &$order, $form = NULL, &$form_state = NULL) {
  $file_url = file_create_url('sites/default/files/sms.jpg');
  switch($op) {
    //CHECKOUT FORM
    case 'view':
      $contents['download_link'] = array(
        '#markup' => t('Download Contract and sign it !link', array('!link' => l(t('contract'), '<front>'))),
      );
      $contents['contact_title'] = array(
        '#title' => t('Title'),
        '#type' => 'select',
        '#options' => array(
          'Mr' => t('Mr'),
          'Ms' => t('Ms'),
        ),
        '#required' =>  TRUE,
      );
      $contents['first_name'] = array(
        '#title' => t('First name'),
        '#type' => 'textfield',
        '#required' =>  TRUE,
      );
      $contents['last_name'] = array(
        '#title' => t('Last name'),
        '#type' => 'textfield',
        '#required' =>  TRUE,
      );
      $contents['tax_code'] = array(
        '#title' => t('Tax code'),
        '#type' => 'textfield',
        '#required' =>  TRUE,
      );
      $contents['contact_birth_date'] = array(
        '#title' => t('Date of birth'),
        '#type' => 'date_popup',
        '#date_format' => 'm/d/Y',
        '#date_label_position' => 'within',
        '#date_increment' => 15,
        '#date_year_range' => '0:+8',
      );
      $contents['contact_gender'] = array(
        '#title' => t('Gender'),
        '#type' => 'select',
        '#options' => array(
          'Male' => t('Male'),
          'Female' => t('Female'),
        ),
        '#required' =>  TRUE,
      );
      $contents['country_birth '] = array(
        '#type' => 'select',
        '#title' => t('Country of birth'),
        '#options' => countries_get_countries('name', array('enabled' => COUNTRIES_ENABLED)),
      );
      $contents['city_birth'] = array(
        '#title' => t('City of birth'),
        '#type' => 'textfield',
      );
      $contents['province_birth'] = array(
        '#title' => t('Province of birth'),
        '#type' => 'textfield',
      );
      $contents['contract'] = array(
        '#type' => 'file',
        '#title' => t('Upload signed contract'),
        //'#description' => t('Upload signed contract'),
      );
      return array('description' => '', 'contents' => $contents);

    //CHECKOUT PROCESSING - load values into order object.
    case 'process':
      watchdog('country', print_r($form_state['values']['panes']['ringo_contact_info'], true));
      $order->data['contact_title'] = $form_state['values']['panes']['ringo_contact_info']['contact_title'];
      $order->data['first_name'] = $form_state['values']['panes']['ringo_contact_info']['first_name'];
      $order->data['last_name'] = $form_state['values']['panes']['ringo_contact_info']['last_name'];
      $order->data['tax_code'] = $form_state['values']['panes']['ringo_contact_info']['tax_code'];
      $order->data['contact_gender'] = $form_state['values']['panes']['ringo_contact_info']['contact_gender'];
      $order->data['contact_birth_date'] = $form_state['values']['panes']['ringo_contact_info']['contact_birth_date'];
      $order->data['city_birth'] = $form_state['values']['panes']['ringo_contact_info']['city_birth'];
      $order->data['province_birth'] = $form_state['values']['panes']['ringo_contact_info']['province_birth'];
      //$order->data['country_birth'] = $form_state['values']['panes']['ringo_contact_info']['country_birth'];
      return TRUE;

    //CHECKOUT REVIEW
    case 'review':
      //$name = countries_api_get_name($iso2_or_iso3);
      $message[] = array('title' => t('Title'),'data' => $order->data['contact_title']);
      $message[] = array('title' => t('First name'),'data' => $order->data['first_name']);
      $message[] = array('title' => t('Last name'),'data' => $order->data['last_name']);
      $message[] = array('title' => t('Tax code'),'data' => $order->data['tax_code']);
      $message[] = array('title' => t('Gender'), 'data' => $order->data['contact_gender']);
      $message[] = array('title' => t('Date of birth'), 'data' => $order->data['contact_birth_date']);
      //$message[] = array('title' => t('Country of birth'), 'data' => $order->data['country_birth']);
      $message[] = array('title' => t('City of birth'), 'data' => $order->data['city_birth']);
      $message[] = array('title' => t('Province of birth'), 'data' => $order->data['province_birth']);
      return $message;
  }
}

function ringo_eshop_uc_add_to_cart($nid, $qty, $data) {
  $sim_id = variable_get('ringo_eshop_sim_id', 30);
  if ($nid == $sim_id) {
    global $user;
    $oid = $data['attributes'][2];
    db_insert('ringo_eshop_numbers')
      ->fields(array(
        'oid' => $oid,
        'uid' => $user->uid,
        'status' => 1,
      ))
      ->execute();
  }
}

function ringo_eshop_form_alter(&$form, &$form_state, $form_id) {
  $sim_id = variable_get('ringo_eshop_sim_id', 30);
  if ($form_id == 'uc_product_add_to_cart_form_'.$sim_id) {
    drupal_add_js(drupal_get_path('module', 'ringo_eshop') . '/js/national_bundles.js', array('group' => JS_THEME));
    $query = db_select('ringo_eshop_numbers', 'rn');
    $query->addField('rn', 'oid');
    $locked_options = $query->execute()->fetchAllKeyed(0, 0);
    $form['attributes'][2]['#options'] = array_diff_key($form['attributes'][2]['#options'], $locked_options);
    // add national offers
    $summary_text = t('You designed an offer of !blue_start !voice minutes, !sms SMS &amp; !data GB !blue_end for
  an estimated monthly bill of !price â‚¬ / month',
      array(
        '!blue_start' => '<span class="blue-color">',
        '!voice' => '<span class="voice">0</span>',
        '!sms' => '<span class="sms">0</span>',
        '!data' => '<span class="data">0</span>',
        '!price' => '<span class="purple-color"> <span class="total">0</span>',
        '!blue_end' => '</span>',
      ));
    //$form['attributes'][4]['#description'] = format_string('<p class="nat-bundle-desc">!summary</p>', array('!summary' => $summary_text));
    $form['attributes'][4]['#prefix'] = '<div id="national-bundle-details">';
    $form['attributes'][4]['#suffix'] = format_string('<p class="nat-bundle-desc">!summary</p>', array('!summary' => $summary_text)) .'</div>';
    $form += _ringo_eshop_build_national_offers();
    $form['attributes'][5]['#prefix'] = '<div id="international-bundle-details">';
    $form['attributes'][5]['#suffix'] = '</div>';
    $form += _ringo_eshop_build_international_offers();
  }
}

function ringo_eshop_uc_cart_item_delete($entity) {
  $sim_id = variable_get('ringo_eshop_sim_id', 30);
  if ($entity->nid == $sim_id) {
    $oid =  $entity->data['attributes'][2];
    db_delete('ringo_eshop_numbers')
      ->condition('oid', $oid)
      ->execute();
  }
}

function _ringo_eshop_build_national_offers() {
  $national_offers = array();
  $cid = 'national_offers';
  if ($cache = cache_get($cid)) {
    $national_offers = $cache->data;
  }
  //$national_offers = get_national_offers();
  return assign_national_bundle_form($national_offers);
}

function _ringo_eshop_build_international_offers() {
  $international_offers = array();
  $cid = 'international_offers';
  if ($cache = cache_get($cid)) {
    $international_offers = $cache->data;
  }
  //$international_offers = get_international_offers();
  return _ringo_eshop_assign_international_bundle_form($international_offers);
}


function _ringo_eshop_assign_international_bundle_form($international_promotions) {
  $form = array();
  $user_regions = array();

  // Add bundle field set.
  $form['select-int-bundle'] = array(
    '#type' => 'fieldset',
    '#title' => t('International bundles'),
  );
  $form['select-int-bundle']['skip'] = array(
    '#markup' => '<div class="skip-bundle" onclick="toggle_bundle(\'national\');">'. t('Go to national bundle') .'</div>',
  );

  $regions = array();
  $table_region = NULL;
  $taken_bundles = array();
  foreach ($international_promotions as $region_promotions) {
    $region_id = $region_promotions['regionId'];

    // If all bundles are taken, skip this region.
    if (isset($user_regions[$region_id])) {
      if (count($user_regions[$region_id]) == count($region_promotions['bundles'])) {
        continue;
      }
    }

    $regions[$region_promotions['regionId']] = t($region_promotions['regionName']);

    // Show selected country if any.
    if (isset($form_state['values']['int-region']) && $form_state['values']['int-region'] == $region_promotions['regionId']) {
      $table_region = $region_promotions;
      $taken_bundles = isset($user_regions[$region_id]) ? $user_regions[$region_id] : array();
    }

    // Show first country by default.
    if (is_null($table_region)) {
      $table_region = $region_promotions;
      $taken_bundles = isset($user_regions[$region_id]) ? $user_regions[$region_id] : array();
    }
  }

  $form['select-int-bundle']['int-region'] = array(
    '#type' => 'select',
    '#options' => $regions,
    '#ajax' => array(
      'event' => 'change',
      'wrapper' => 'select-int-wrapper',
      'callback' => 'int_bundle_selection_change_callback',
      'method' => 'replace',
    ),
  );

  if (!is_null($table_region)) {
    $form['select-int-bundle']['int-bundle'] = get_international_table(
      $table_region,
      TRUE,
      $taken_bundles
    );

    $form['select-int-bundle']['int-bundle']['#prefix'] = '<div id="select-int-wrapper" >';
    $form['select-int-bundle']['int-bundle']['#suffix'] = '</div>';
  }
  else {
    $form['select-int-bundle']['int-bundle'] = array(
      '#markup' => '<div id="select-int-wrapper" ></div>',
    );
  }

  return $form;
}


/**
 * Implements of hook_init().
 */
function ringo_eshop_init() {
  // Redirect to SIM cart product page
  if ($_GET['q'] == 'taxonomy/term/44') {
    $sim_id = variable_get('ringo_eshop_sim_id', 30);
    drupal_goto('node/'. $sim_id);
  }
}

