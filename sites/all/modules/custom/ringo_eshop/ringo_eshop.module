<?php

define('RINGO_BASE_CACHE_RINGO_ENDPOINTS', REQUEST_TIME + 3600);

require_once dirname(__FILE__) . '/includes/assign_bundle.inc';
require_once dirname(__FILE__) . '/includes/ringo_api_calls.inc';
require_once dirname(__FILE__) . '/soap/DealerWs/DealerWs.php';
require_once dirname(__FILE__) . '/soap/ManagementWs/ManagementWs.php';
require_once dirname(__FILE__) . '/uc_eshop_checkout_pane.inc';


/**
* Implement of hook_menu().
*/
function ringo_eshop_menu() {
  $items = array();
  $items['my-ringo/manage-bundles'] = array(
    'title' => 'My Offers',
    'page callback' => '_ringo_eshop_build_international_offers',
    //'page callback' => 'drupal_get_form',
    //'page arguments' => array('assign_eshop_international_bundle_form'),
    'access callback' => 'user_is_logged_in',
    'file' => 'assign_bundle.inc',
    'file path' => drupal_get_path('module', 'ringo_eshop') . '/includes',
  );
  $items['manage/sim-cards'] = array(
    'title' => t('Manage Sim-cards'),
    'page callback' => '_ringo_eshop_manage_simcards',
    'access arguments' => array('Administer product options'),
    'file' => 'manage_simcards.inc',
    'file path' => drupal_get_path('module', 'ringo_eshop') . '/includes',
  );        
  return $items;
}

/*
 * Implement of hook_theme().
 */
function ringo_eshop_theme(){
    return array(
        'manage_simcards_template' => array(
            // file name will be custom-page.tpl.php
            'variables' => array('options' => null, 'num_status' => null),
            'template' => "manage-simcards",
            'path' => drupal_get_path("module", "ringo_eshop")."/templates" ,
        ),
    );
}

/**
 * Implementation of hook_uc_checkout_pane()
 */

function ringo_eshop_uc_checkout_pane() {
  $panes[] = array(
    'id' => 'horizontal_browsing_tabs',
    'title' => null,
    'desc' => null ,
    'callback' => 'ringo_eshop_horizontal_browsing_tabs_pane_checkout',
    'process' => FALSE,
    'weight' => -10,
   );
    
  $panes[] = array(
    'id' => 'id_document',
    'title' => t('ID Document'),
     'desc' => t('Provide customers to add ID document information'),
     'callback' => 'ringo_eshop_id_document_pane_checkout',
     'process' => TRUE,
     'weight' => 3,
   );
  $panes[] = array(
    'id' => 'ringo_contact_info',
    'title' => t('Contact info'),
     'desc' => t('Provide customers to add contact information'),
     'callback' => 'ringo_eshop_contact_info_pane_checkout',
     'process' => TRUE,
     'weight' => 2,
   );

   return $panes;
}

/**
 * Implements of hook_uc_add_to_cart().
 */
function ringo_eshop_uc_add_to_cart($nid, $qty, $data) {
  $sim_id = variable_get('ringo_eshop_sim_id', 30);
  if ($nid == $sim_id) {
    global $user;
    $user_profile = user_load($user->uid);
    $restrict_qty = variable_get('ringo_eshop_sim_restrict_qty', 4);
    // load current mobiles 
    if (isset($user_profile->field_tax_code[LANGUAGE_NONE][0]['value'])) {
        $all_mobiles = ringo_api_get_all_mobile_numbers($user_profile->field_tax_code[LANGUAGE_NONE][0]['value']);
        if (count($all_mobiles)) {
            $restrict_qty -= count($all_mobiles);
        }
    }
    // get SIM count in shipping cart
    $sim_count = 0;
    foreach (uc_cart_get_contents() as $item) {
        if ($item->nid == $sim_id) {
            $sim_count++;
        }
    }
    if ($sim_count >= $restrict_qty) {
         $message = format_plural($restrict_qty, 'Sorry, you may only have 1 item in your cart. You must checkout or remove the item in your cart before adding a different item.',
        'Sorry, you may only have a total of @count items in your cart.  You must checkout or remove items from your cart before adding others.');
        $result[] = array(
            'success' => FALSE,
            'message' => $message,
        );
      return $result;
    }
    // log number in custom table to track this number
    $oid = $data['attributes'][2];
    db_insert('ringo_eshop_numbers')
      ->fields(array(
        'oid' => $oid,
        'uid' => $user->uid,
        'status' => 1,
      ))
      ->execute();
  }
}

/**
 * Implements of hook_uc_cart_item_update().
 */
function ringo_eshop_uc_cart_item_update($item) {
    $sim_id = variable_get('ringo_eshop_sim_id', 30);
    if ($item->nid == $sim_id && $item->qty > 1) {
      db_update('uc_cart_products')
              ->fields(array('qty' => 1, 'changed' => time()))
              ->condition('cart_id', uc_cart_get_id())
              ->condition('nid', $item->nid)
              ->condition('data', serialize($item->data))
              ->execute();
      drupal_set_message(t('You may only add 1 !item to your cart. Quantity has been restricted.', array('!item' => $item->title)), 'warning');
    }
}

/**
 * Implements of hook_form_alter().
 */
function ringo_eshop_form_alter(&$form, &$form_state, $form_id) {
  drupal_add_js(drupal_get_path('module', 'ringo_eshop') . '/js/jquery-ui.js', array('group' => JS_THEME));
  drupal_add_css(drupal_get_path('module', 'ringo_eshop') . '/css/jquery-ui.css');
  drupal_add_js(drupal_get_path('module', 'ringo_eshop') . '/js/national_bundles.js', array('group' => JS_THEME));
  if ($form_id == 'uc_cart_checkout_form') {
      $form['panes']['delivery']['#title'] = t('Shipping Address');
      $form['#validate'][] = '_ringo_eshop_validate_delivery';
      $form['panes']['payment']['term_condition'] = array(
          '#prefix' => '<div class="form-inline conditions-and-submit">',
          '#type' => 'checkbox',
          '#title' => t(
          'Accept !terms_and_conditions and !privacy_policy',
          array(
            '!privacy_policy' => l(
            t('Privacy Policy'),
            variable_get('ringo_privacy_link', '<front>'),
            array('attributes' => array('target' => '_blank'))
            ),
            '!terms_and_conditions' => l(
            t('Terms and Conditions'),
            variable_get('ringo_terms_and_conditions', '<front>'),
            array('attributes' => array('target' => '_blank'))
            ),
        )   
      ),  
    '#required' => TRUE,
  ); 
      
  }
  $sim_id = variable_get('ringo_eshop_sim_id', 30);
  if ($form_id == 'uc_product_add_to_cart_form_'.$sim_id) {
    $query = db_select('ringo_eshop_numbers', 'rn');
    $query->addField('rn', 'oid');
    $locked_options = $query->execute()->fetchAllKeyed(0, 0);
    $form['attributes'][2]['#options'] = array_diff_key($form['attributes'][2]['#options'], $locked_options);
    // localize card options
    $card_types = array();
    foreach ($form['attributes'][1]['#options'] as $k => $v) {
        $card_types[$k] = t($v);
    }
    $form['attributes'][1]['#options'] = $card_types;
    // add national offers
    $summary_text = t('National Offers: You designed an offer of !blue_start !voice minutes, !sms SMS &amp; !data GB !blue_end for
  an estimated monthly bill of "!price € / month"',
      array(
        '!blue_start' => '<span class="blue-color">',
        '!voice' => '<span class="voice">0</span>',
        '!sms' => '<span class="sms">0</span>',
        '!data' => '<span class="data">0</span>',
        '!price' => '<span class="purple-color"><span class="total">0</span>',
        '!blue_end' => '</span>',
      ));
    //$form['attributes'][4]['#prefix'] = '<div id="national-bundle-details">';
    //$form['attributes'][4]['#suffix'] = format_string('<p class="nat-bundle-desc">!summary</p>', array('!summary' => $summary_text)) .'</div>';
    //$form['attributes'][5]['#prefix'] = '<div id="international-bundle-details">';
    //$form['attributes'][5]['#suffix'] = format_string('<p class="internat-bundle-desc"></p>') .'</div>';
    $form['tabs'] = array(
      '#prefix' => '<div id="tabs">',
      '#markup' => '<ul><li><a href="#tabs-1">'. t('National Offers') .'</a></li><li><a href="#tabs-2">'. t('International Offers') .'</a></li></ul>',
      '#weight' => 0,
    );
    $form += _ringo_eshop_build_national_offers();
    $form += _ringo_eshop_build_international_offers();
    $nat_desc = '<div id="national-bundle-details">' . format_string('<p class="nat-bundle-desc">!summary</p>', array('!summary' => $summary_text)) .'</div>';
    $internat_desc = '<div id="international-bundle-details">' . format_string('<p class="internat-bundle-desc">!summary</p>', array('!summary' => t('International offers: '))) .'</div>';
    $form['tabs_close'] = array(
      '#markup' => '</div>',
      '#suffix' => $nat_desc . $internat_desc,
      '#weight' => 3,
    );
    $form['qty']['#weight'] = 4;
  }
}

function _ringo_eshop_validate_delivery($form, &$form_state) {
    // validate delivery mobile number
    $phone = $form_state['values']['panes']['delivery']['address']['delivery_phone'];
    if(!preg_match('/^\+{0,1}(?:[0-9] ?){6,14}[0-9]$/', $phone, $matches)) {
        form_set_error('panes][delivery][address][delivery_phone', t('You should add a valid shipping mobile number.')) ;
    }
    // validate billing mobile number
    $phone = $form_state['values']['panes']['billing']['address']['billing_phone'];
    if (!$form_state['values']['panes']['billing']['copy_address'] && !preg_match('/^\+{0,1}(?:[0-9] ?){6,14}[0-9]$/', $phone, $matches)) {
        form_set_error('panes][billing][address][delivery_phone', t('You should add a valid billing mobile number.')) ;
    }
}
/**
 *Implements of hook_uc_cart_alter().
 */
function ringo_eshop_uc_cart_alter(&$items) {
  $sim_id = variable_get('ringo_eshop_sim_id', 30);
  foreach ($items as $id => $item) {
    if ($item->nid == $sim_id) {
      $pattern = '/"([0-9].*?)€/';
      if (!empty($item->data['attributes'][4])) {
        preg_match($pattern, $item->data['attributes'][4], $matches);
        if (isset($matches[1])) {
          $items[$id]->price += intval($matches[1]);
        }
      }
      if (!empty($item->data['attributes'][5])) {
        preg_match_all($pattern, $item->data['attributes'][5], $matches);
        foreach ($matches[1] as $price) {
          $items[$id]->price += intval($price);
        }
      }
    }
  }
}

function ringo_eshop_uc_cart_item_delete($entity) {
  $sim_id = variable_get('ringo_eshop_sim_id', 30);
  if ($entity->nid == $sim_id) {
    $oid =  $entity->data['attributes'][2];
    db_delete('ringo_eshop_numbers')
      ->condition('oid', $oid)
      ->execute();
  }
}

function _ringo_eshop_build_national_offers() {
  $national_offers = get_national_offers();
  return assign_national_bundle_form($national_offers);
}

function _ringo_eshop_build_international_offers() {
  return drupal_get_form('assign_eshop_international_bundle_form');
}


function _ringo_eshop_assign_international_bundle_form($international_promotions) {
  $form = array();
  $user_regions = array();

  // Add bundle field set.
  $form['select-int-bundle'] = array(
    '#type' => 'fieldset',
    '#title' => t('International bundles'),
  );


  $regions = array();
  $table_region = NULL;
  $taken_bundles = array();
  foreach ($international_promotions as $region_promotions) {
    $region_id = $region_promotions['regionId'];

    // If all bundles are taken, skip this region.
    if (isset($user_regions[$region_id])) {
      if (count($user_regions[$region_id]) == count($region_promotions['bundles'])) {
        continue;
      }
    }

    $regions[$region_promotions['regionId']] = t($region_promotions['regionName']);

    // Show selected country if any.
    if (isset($form_state['values']['int-region']) && $form_state['values']['int-region'] == $region_promotions['regionId']) {
      $table_region = $region_promotions;
      $taken_bundles = isset($user_regions[$region_id]) ? $user_regions[$region_id] : array();
    }

    // Show first country by default.
    if (is_null($table_region)) {
      $table_region = $region_promotions;
      $taken_bundles = isset($user_regions[$region_id]) ? $user_regions[$region_id] : array();
    }
  }

  $form['select-int-bundle']['int-region'] = array(
    '#type' => 'select',
    '#options' => $regions,
    '#ajax' => array(
      'event' => 'change',
      'wrapper' => 'select-int-wrapper',
      'callback' => 'int_bundle_selection_change_callback',
      'method' => 'replace',
    ),
  );

  if (!is_null($table_region)) {
    $form['select-int-bundle']['int-bundle'] = get_international_table(
      $table_region,
      TRUE,
      $taken_bundles
    );

    $form['select-int-bundle']['int-bundle']['#prefix'] = '<div id="select-int-wrapper" >';
    $form['select-int-bundle']['int-bundle']['#suffix'] = '</div>';
  }
  else {
    $form['select-int-bundle']['int-bundle'] = array(
      '#markup' => '<div id="select-int-wrapper" ></div>',
    );
  }
  $form['select-int-bundle']['skip'] = array(
    '#markup' => '<div class="skip-bundle" onclick="toggle_bundle(\'national\');">'. t('Go to national bundle') .'</div>',
  );
  return $form;
}


/**
 * Implements of hook_init().
 */
function ringo_eshop_init() {
  // Redirect to SIM cart product page
  if ($_GET['q'] == 'taxonomy/term/44') {
    $sim_id = variable_get('ringo_eshop_sim_id', 30);
    drupal_goto('node/'. $sim_id);
  }
}

